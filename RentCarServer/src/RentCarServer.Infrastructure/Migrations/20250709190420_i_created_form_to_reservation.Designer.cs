// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentCarServer.Infrastructure.Context;

#nullable disable

namespace RentCarServer.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250709190420_i_created_form_to_reservation")]
    partial class i_created_form_to_reservation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentCarServer.Domain.Branches.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Branches", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.Categories.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.Customers.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.Extras.Extra", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Extras", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.LoginTokens.LoginToken", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LoginTokens", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.ProtectionPackages.ProtectionPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProtectionPackages", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.Reservations.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PickUpLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProtectionPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Reservations", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.Vehicles.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("RentCarServer.Domain.Branches.Branch", b =>
                {
                    b.OwnsOne("RentCarServer.Domain.Shared.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("BranchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("BranchId");

                            b1.ToTable("Branches");

                            b1.WithOwner()
                                .HasForeignKey("BranchId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("BranchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.Property<string>("FullAddress")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("BranchId");

                            b1.ToTable("Branches");

                            b1.WithOwner()
                                .HasForeignKey("BranchId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Contact", "Contact", b1 =>
                        {
                            b1.Property<Guid>("BranchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.Property<string>("PhoneNumber1")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.Property<string>("PhoneNumber2")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("BranchId");

                            b1.ToTable("Branches");

                            b1.WithOwner()
                                .HasForeignKey("BranchId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Contact")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarServer.Domain.Categories.Category", b =>
                {
                    b.OwnsOne("RentCarServer.Domain.Shared.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("CategoryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("CategoryId");

                            b1.ToTable("Categories");

                            b1.WithOwner()
                                .HasForeignKey("CategoryId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarServer.Domain.Customers.Customer", b =>
                {
                    b.OwnsOne("RentCarServer.Domain.Shared.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.FirstName", "FirstName", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.LastName", "LastName", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Customers.DateOfBirth", "DateOfBirth", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Customers.DrivingLicenseIssuanceDate", "DrivingLicenseIssuanceDate", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Customers.FullAddress", "FullAddress", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Customers.IdentityNumber", "IdentityNumber", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Customers.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("DateOfBirth")
                        .IsRequired();

                    b.Navigation("DrivingLicenseIssuanceDate")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("FirstName")
                        .IsRequired();

                    b.Navigation("FullAddress")
                        .IsRequired();

                    b.Navigation("FullName")
                        .IsRequired();

                    b.Navigation("IdentityNumber")
                        .IsRequired();

                    b.Navigation("LastName")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarServer.Domain.Extras.Extra", b =>
                {
                    b.OwnsOne("RentCarServer.Domain.Shared.Description", "Description", b1 =>
                        {
                            b1.Property<Guid>("ExtraId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("ExtraId");

                            b1.ToTable("Extras");

                            b1.WithOwner()
                                .HasForeignKey("ExtraId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("ExtraId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("ExtraId");

                            b1.ToTable("Extras");

                            b1.WithOwner()
                                .HasForeignKey("ExtraId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ExtraId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("money");

                            b1.HasKey("ExtraId");

                            b1.ToTable("Extras");

                            b1.WithOwner()
                                .HasForeignKey("ExtraId");
                        });

                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarServer.Domain.LoginTokens.LoginToken", b =>
                {
                    b.OwnsOne("RentCarServer.Domain.LoginTokens.ValueObjects.ExpiresDate", "ExpiresDate", b1 =>
                        {
                            b1.Property<Guid>("LoginTokenId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("Value")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("LoginTokenId");

                            b1.ToTable("LoginTokens");

                            b1.WithOwner()
                                .HasForeignKey("LoginTokenId");
                        });

                    b.OwnsOne("RentCarServer.Domain.LoginTokens.ValueObjects.IsActive", "IsActive", b1 =>
                        {
                            b1.Property<Guid>("LoginTokenId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("Value")
                                .HasColumnType("bit");

                            b1.HasKey("LoginTokenId");

                            b1.ToTable("LoginTokens");

                            b1.WithOwner()
                                .HasForeignKey("LoginTokenId");
                        });

                    b.OwnsOne("RentCarServer.Domain.LoginTokens.ValueObjects.Token", "Token", b1 =>
                        {
                            b1.Property<Guid>("LoginTokenId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("LoginTokenId");

                            b1.ToTable("LoginTokens");

                            b1.WithOwner()
                                .HasForeignKey("LoginTokenId");
                        });

                    b.Navigation("ExpiresDate")
                        .IsRequired();

                    b.Navigation("IsActive")
                        .IsRequired();

                    b.Navigation("Token")
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarServer.Domain.ProtectionPackages.ProtectionPackage", b =>
                {
                    b.OwnsOne("RentCarServer.Domain.Shared.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("ProtectionPackageId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("ProtectionPackageId");

                            b1.ToTable("ProtectionPackages");

                            b1.WithOwner()
                                .HasForeignKey("ProtectionPackageId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProtectionPackageId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("money");

                            b1.HasKey("ProtectionPackageId");

                            b1.ToTable("ProtectionPackages");

                            b1.WithOwner()
                                .HasForeignKey("ProtectionPackageId");
                        });

                    b.OwnsOne("RentCarServer.Domain.ProtectionPackages.ValueObjects.IsRecommended", "IsRecommended", b1 =>
                        {
                            b1.Property<Guid>("ProtectionPackageId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("Value")
                                .HasColumnType("bit");

                            b1.HasKey("ProtectionPackageId");

                            b1.ToTable("ProtectionPackages");

                            b1.WithOwner()
                                .HasForeignKey("ProtectionPackageId");
                        });

                    b.OwnsMany("RentCarServer.Domain.ProtectionPackages.ValueObjects.ProtectionCoverage", "Coverages", b1 =>
                        {
                            b1.Property<Guid>("ProtectionPackageId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("ProtectionPackageId", "Id");

                            b1.ToTable("ProtectionCoverage");

                            b1.WithOwner()
                                .HasForeignKey("ProtectionPackageId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.OrderNumber", "OrderNumber", b1 =>
                        {
                            b1.Property<Guid>("ProtectionPackageId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("ProtectionPackageId");

                            b1.ToTable("ProtectionPackages");

                            b1.WithOwner()
                                .HasForeignKey("ProtectionPackageId");
                        });

                    b.Navigation("Coverages");

                    b.Navigation("IsRecommended")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("OrderNumber")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarServer.Domain.Reservations.Reservation", b =>
                {
                    b.OwnsOne("RentCarServer.Domain.Reservations.Form", "DeliveryForm", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");

                            b1.OwnsMany("RentCarServer.Domain.Reservations.Damage", "Damages", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.Property<string>("Level")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.HasKey("FormReservationId", "Id");

                                    b2.ToTable("DeliveryForm_Damages", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.OwnsMany("RentCarServer.Domain.Vehicles.ValueObjects.ImageUrl", "ImageUrls", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.HasKey("FormReservationId", "Id");

                                    b2.ToTable("DeliveryForm_ImageUrls", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.Kilometer", "Kilometer", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Value")
                                        .HasColumnType("int");

                                    b2.HasKey("FormReservationId");

                                    b2.ToTable("Reservations");

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.Note", "Note", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.HasKey("FormReservationId");

                                    b2.ToTable("DeliveryForm_Note", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.OwnsMany("RentCarServer.Domain.Reservations.Supplies", "Supplies", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.HasKey("FormReservationId", "Id");

                                    b2.ToTable("DeliveryForm_Supplies", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.Navigation("Damages");

                            b1.Navigation("ImageUrls");

                            b1.Navigation("Kilometer")
                                .IsRequired();

                            b1.Navigation("Note")
                                .IsRequired();

                            b1.Navigation("Supplies");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.Note", "Note", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.Form", "PickUpForm", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");

                            b1.OwnsMany("RentCarServer.Domain.Reservations.Damage", "Damages", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.Property<string>("Level")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.HasKey("FormReservationId", "Id");

                                    b2.ToTable("PickUpForm_Damages", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.OwnsMany("RentCarServer.Domain.Vehicles.ValueObjects.ImageUrl", "ImageUrls", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.HasKey("FormReservationId", "Id");

                                    b2.ToTable("PickUpForm_ImageUrls", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.Kilometer", "Kilometer", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Value")
                                        .HasColumnType("int");

                                    b2.HasKey("FormReservationId");

                                    b2.ToTable("Reservations");

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.Note", "Note", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.HasKey("FormReservationId");

                                    b2.ToTable("PickUpForm_Note", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.OwnsMany("RentCarServer.Domain.Reservations.Supplies", "Supplies", b2 =>
                                {
                                    b2.Property<Guid>("FormReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(MAX)");

                                    b2.HasKey("FormReservationId", "Id");

                                    b2.ToTable("PickUpForm_Supplies", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("FormReservationId");
                                });

                            b1.Navigation("Damages");

                            b1.Navigation("ImageUrls");

                            b1.Navigation("Kilometer")
                                .IsRequired();

                            b1.Navigation("Note")
                                .IsRequired();

                            b1.Navigation("Supplies");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Price", "ProtectionPackagePrice", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("money");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Price", "VehicleDailyPrice", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("money");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsMany("RentCarServer.Domain.Reservations.ReservationExtra", "ReservationExtras", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("ExtraId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Price")
                                .HasColumnType("money");

                            b1.HasKey("ReservationId", "Id");

                            b1.ToTable("ReservationExtra");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.DeliveryDate", "DeliveryDate", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.DeliveryDatetime", "DeliveryDatetime", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("Value")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.DeliveryTime", "DeliveryTime", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<TimeOnly>("Value")
                                .HasColumnType("time(7)");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.PaymentInformation", "PaymentInformation", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CartNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.Property<string>("Owner")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.PickUpDate", "PickUpDate", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.PickUpDatetime", "PickUpDatetime", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("Value")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.PickUpTime", "PickUpTime", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<TimeOnly>("Value")
                                .HasColumnType("time(7)");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsMany("RentCarServer.Domain.Reservations.ValueObjects.ReservationHistory", "Histories", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTimeOffset>("CreatedAt")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("ReservationId", "Id");

                            b1.ToTable("ReservationHistory");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.ReservationNumber", "ReservationNumber", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.Status", "Status", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Reservations.ValueObjects.TotalDay", "TotalDay", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Total", "Total", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("money");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.Navigation("DeliveryDate")
                        .IsRequired();

                    b.Navigation("DeliveryDatetime")
                        .IsRequired();

                    b.Navigation("DeliveryForm")
                        .IsRequired();

                    b.Navigation("DeliveryTime")
                        .IsRequired();

                    b.Navigation("Histories");

                    b.Navigation("Note")
                        .IsRequired();

                    b.Navigation("PaymentInformation")
                        .IsRequired();

                    b.Navigation("PickUpDate")
                        .IsRequired();

                    b.Navigation("PickUpDatetime")
                        .IsRequired();

                    b.Navigation("PickUpForm")
                        .IsRequired();

                    b.Navigation("PickUpTime")
                        .IsRequired();

                    b.Navigation("ProtectionPackagePrice")
                        .IsRequired();

                    b.Navigation("ReservationExtras");

                    b.Navigation("ReservationNumber")
                        .IsRequired();

                    b.Navigation("Status")
                        .IsRequired();

                    b.Navigation("Total")
                        .IsRequired();

                    b.Navigation("TotalDay")
                        .IsRequired();

                    b.Navigation("VehicleDailyPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarServer.Domain.Roles.Role", b =>
                {
                    b.OwnsMany("RentCarServer.Domain.Roles.Permission", "Permissions", b1 =>
                        {
                            b1.Property<Guid>("RoleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("RoleId", "Id");

                            b1.ToTable("Permission");

                            b1.WithOwner()
                                .HasForeignKey("RoleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("RoleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("RoleId");

                            b1.ToTable("Roles");

                            b1.WithOwner()
                                .HasForeignKey("RoleId");
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("RentCarServer.Domain.Users.User", b =>
                {
                    b.OwnsOne("RentCarServer.Domain.Users.TFACode", "TFACode", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Users.TFAConfirmCode", "TFAConfirmCode", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Users.TFAExpiresDate", "TFAExpiresDate", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("Value")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Users.TFAIsCompleted", "TFAIsCompleted", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("Value")
                                .HasColumnType("bit");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Users.TFAStatus", "TFAStatus", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("Value")
                                .HasColumnType("bit");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.FirstName", "FirstName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.LastName", "LastName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Users.ValueObjects.ForgotPasswordCode", "ForgotPasswordCode", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Users.ValueObjects.ForgotPasswordDate", "ForgotPasswordDate", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("Value")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Users.ValueObjects.IsForgotPasswordCompleted", "IsForgotPasswordCompleted", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("Value")
                                .HasColumnType("bit");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Users.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte[]>("PasswordHash")
                                .IsRequired()
                                .HasColumnType("varbinary(max)");

                            b1.Property<byte[]>("PasswordSalt")
                                .IsRequired()
                                .HasColumnType("varbinary(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Users.ValueObjects.UserName", "UserName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("FirstName")
                        .IsRequired();

                    b.Navigation("ForgotPasswordCode");

                    b.Navigation("ForgotPasswordDate");

                    b.Navigation("FullName")
                        .IsRequired();

                    b.Navigation("IsForgotPasswordCompleted")
                        .IsRequired();

                    b.Navigation("LastName")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("TFACode");

                    b.Navigation("TFAConfirmCode");

                    b.Navigation("TFAExpiresDate");

                    b.Navigation("TFAIsCompleted");

                    b.Navigation("TFAStatus")
                        .IsRequired();

                    b.Navigation("UserName")
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarServer.Domain.Vehicles.Vehicle", b =>
                {
                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.Brand", "Brand", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.CascoEndDate", "CascoEndDate", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.Color", "Color", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.DailyPrice", "DailyPrice", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("money");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.EngineNumber", "EngineNumber", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.EnginePower", "EnginePower", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.EngineVolume", "EngineVolume", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsMany("RentCarServer.Domain.Vehicles.ValueObjects.Feature", "Features", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId", "Id");

                            b1.ToTable("Feature");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.FuelConsumption", "FuelConsumption", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.FuelType", "FuelType", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.GeneralStatus", "GeneralStatus", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.InspectionDate", "InspectionDate", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.InsuranceEndDate", "InsuranceEndDate", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.InsuranceType", "InsuranceType", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.LastMaintenanceDate", "LastMaintenanceDate", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.LastMaintenanceKm", "LastMaintenanceKm", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.Model", "Model", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.ModelYear", "ModelYear", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.MonthlyDiscountRate", "MonthlyDiscountRate", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.NextMaintenanceKm", "NextMaintenanceKm", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.Plate", "Plate", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.SeatCount", "SeatCount", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.TireStatus", "TireStatus", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.TractionType", "TractionType", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.Transmission", "Transmission", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.VinNumber", "VinNumber", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.WeeklyDiscountRate", "WeeklyDiscountRate", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Abstractions.IdentityId", "BranchId", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Abstractions.IdentityId", "CategoryId", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Shared.Description", "Description", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.ImageUrl", "ImageUrl", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.OwnsOne("RentCarServer.Domain.Vehicles.ValueObjects.Kilometer", "Kilometer", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.Navigation("BranchId")
                        .IsRequired();

                    b.Navigation("Brand")
                        .IsRequired();

                    b.Navigation("CascoEndDate");

                    b.Navigation("CategoryId")
                        .IsRequired();

                    b.Navigation("Color")
                        .IsRequired();

                    b.Navigation("DailyPrice")
                        .IsRequired();

                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("EngineNumber")
                        .IsRequired();

                    b.Navigation("EnginePower")
                        .IsRequired();

                    b.Navigation("EngineVolume")
                        .IsRequired();

                    b.Navigation("Features");

                    b.Navigation("FuelConsumption")
                        .IsRequired();

                    b.Navigation("FuelType")
                        .IsRequired();

                    b.Navigation("GeneralStatus")
                        .IsRequired();

                    b.Navigation("ImageUrl")
                        .IsRequired();

                    b.Navigation("InspectionDate")
                        .IsRequired();

                    b.Navigation("InsuranceEndDate")
                        .IsRequired();

                    b.Navigation("InsuranceType")
                        .IsRequired();

                    b.Navigation("Kilometer")
                        .IsRequired();

                    b.Navigation("LastMaintenanceDate")
                        .IsRequired();

                    b.Navigation("LastMaintenanceKm")
                        .IsRequired();

                    b.Navigation("Model")
                        .IsRequired();

                    b.Navigation("ModelYear")
                        .IsRequired();

                    b.Navigation("MonthlyDiscountRate")
                        .IsRequired();

                    b.Navigation("NextMaintenanceKm")
                        .IsRequired();

                    b.Navigation("Plate")
                        .IsRequired();

                    b.Navigation("SeatCount")
                        .IsRequired();

                    b.Navigation("TireStatus")
                        .IsRequired();

                    b.Navigation("TractionType")
                        .IsRequired();

                    b.Navigation("Transmission")
                        .IsRequired();

                    b.Navigation("VinNumber")
                        .IsRequired();

                    b.Navigation("WeeklyDiscountRate")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
